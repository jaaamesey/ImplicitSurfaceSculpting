#!/usr/bin/env python
import os
import sys

env = SConscript("godot-cpp/SConstruct")

# For reference:
# - CCFLAGS are compilation flags shared between C and C++
# - CFLAGS are for C-specific compilation flags
# - CXXFLAGS are for C++-specific compilation flags
# - CPPFLAGS are for pre-processor flags
# - CPPDEFINES are for pre-processor defines
# - LINKFLAGS are for linking flags

# tweak this if you want to use different folders, or more folders, to store your source code in.
env.Append(CPPPATH=[
    "src/",
    "src/lib/tbb/include",
    "src/lib/boost_libs/core/include",
    "src/lib/boost_libs/any/include",
    "src/lib/boost_libs/assert/include",
    "src/lib/boost_libs/config/include",
    "src/lib/boost_libs/container_hash/include",
    "src/lib/boost_libs/mpl/include",
    "src/lib/boost_libs/preprocessor/include",
    "src/lib/boost_libs/tbb/include",
    "src/lib/boost_libs/numeric/numeric_conversion/include",
    "src/lib/boost_libs/static_assert/include",
    "src/lib/boost_libs/type_traits/include",
    "src/lib/boost_libs/type_index/include",
    "src/lib/boost_libs/throw_exception/include",
    "src/lib/openvdb/nanovdb/",
    "src/lib/openvdb/openvdb/",
    "src/lib/openvdb_overrides",
])
sources = Glob("src/*.cpp")

if env["platform"] == "macos":
    library = env.SharedLibrary(
        "../bin/libgdexample.{}.{}.framework/libgdexample.{}.{}".format(
            env["platform"], env["target"], env["platform"], env["target"]
        ),
        source=sources,
    )
else:
    library = env.SharedLibrary(
        "../bin/libgdexample{}{}".format(env["suffix"], env["SHLIBSUFFIX"]),
        source=sources,
    )

Default(library)
